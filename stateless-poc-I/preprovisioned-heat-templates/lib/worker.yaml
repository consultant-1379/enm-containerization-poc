heat_template_version: 2015-04-30

description: K8S Node

parameters:
  flavor:
    type: string
    description: flavor used by the server

  image_name:
    type: string
    description: image used by the server

  internal_network:
    type: string
    description: network used by the server

  username:
    type: string
    description: username of the user

  key_name:
    type: string
    description: name of an existing key pair to use
    constraints:
      - custom_constraint: nova.keypair
        description: must name a public key (pair) known to Nova

  erikube_timezone:
    type: string
    default: UTC

  security_group_name:
    type: string

  use_config_drive:
    default: true
    type: boolean

  NodeIndex:
    type: string

  nodeName:
    type: string
    default: "worker"


resources:
  create_user:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        system_info:
          default_user:
            name: {get_param: username}
            lock_passwd: true
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash

  node_config:
    type: OS::Heat::MultipartMime
    properties:
      parts:
      - config: {get_resource: cloud_config}
      - config: {get_resource: create_user}

  internal_port:
    type: OS::Neutron::Port
    properties:
     network: {get_param: internal_network}
     allowed_address_pairs:
      - ip_address: 0.0.0.0/0
     security_groups:
      - get_param: security_group_name

  node:
    type: OS::Nova::Server
    properties:
      config_drive: {get_param: use_config_drive}
      name:
        list_join: [-, [{get_param: nodeName} ,{ get_param: NodeIndex} ]]
      image: {get_param: image_name}
      flavor: {get_param: flavor}
      key_name: {get_param: key_name}
      networks:
        - port: {get_resource: internal_port}
      user_data_format: RAW
      user_data: {get_resource: node_config}

  cloud_config:
    type: OS::Heat::CloudConfig
    properties:
      cloud_config:
        debug:
          verbose: true
        timezone:
          str_replace:
            params:
              $timezone: {get_param: erikube_timezone}
            template: |
              $timezone
        final_message: "The system is now up, after $UPTIME seconds"
outputs:
  OS::stack_id:
    value: {get_resource: node}

  internal_ip:
    value: {get_attr: [internal_port, fixed_ips, 0, ip_address]}
