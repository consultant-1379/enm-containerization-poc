apiVersion: "apps/v1beta2"
kind: StatefulSet
metadata:
  name: {{ .Values.service.name }}
spec:
  serviceName: {{ .Values.service.name }}
  replicas: {{ index .Values "replicas-<CHARTNAME>" }}
  selector:
    matchLabels:
      app: {{ .Values.service.name }}
  strategy:
    type: {{ .Values.deploymentStrategy }}
{{- if ne .Values.deploymentStrategy "RollingUpdate" }}
    rollingUpdate: null
{{- end }}
  template:
    metadata:
      labels:
        app: {{ .Values.service.name }}
{{- with .Values.podAnnotations }}
      annotations:
{{ toYaml . | indent 8 }}
{{- end }}
    spec:
{{- if .Values.priorityClassName }}
      priorityClassName: "{{ .Values.priorityClassName }}"
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ tpl .Values.affinity . | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if or .Values.extraInitContainers .Values.waitInitContainer.enabled }}
      initContainers:
{{- if .Values.extraInitContainers }}
{{ toYaml .Values.extraInitContainers | indent 6 }}
{{- end }}
{{- if .Values.waitInitContainer.enabled }}
      - name: {{ .Values.service.name }}-wait
        image: "{{ .Values.image.repository }}:{{ .Values.waitInitContainer.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
        command: {{ .Values.waitInitContainer.command }}
        env:
         - name: NAMESPACE
           valueFrom:
             fieldRef:
               fieldPath: metadata.namespace
{{- end }}
{{- end }}
      containers:
      - name: {{ .Values.service.name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.imagePullPolicy | quote }}
        command: {{ .Values.image.command }}

{{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | indent 10 }}
{{- end }}
{{- if .Values.sidecarContainers }}
{{ toYaml .Values.sidecarContainers | indent 6 }}
{{- end }}
{{- if .Values.extraEnv }}
{{ toYaml .Values.extraEnv | indent 10 }}
{{- end }}
{{- if .Values.extraPorts.enabled }}
        ports:
{{ .Files.Get "config/containerPorts.txt" | indent 10 }}
{{- end }}
{{- if .Values.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            port: {{ .Values.readinessProbe.httpPort }}
          initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
{{- end }}
{{- if .Values.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            port: {{ .Values.readinessProbe.httpPort }}
          initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
          periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
          failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
{{- end }}
{{- if or .Values.persistence.enabled .Values.configMaps.enabled .Values.extraVolumeMounts.enabled }}
        volumeMounts:
{{- end }}
{{- if .Values.persistence.enabled }}
        - name: pv-{{ template "<CHARTNAME>.name" . }}
          mountPath: {{ .Values.persistence.mountPath }}
{{- end }}
{{- if .Values.configMaps.enabled }}
        - name: configurations
          mountPath: {{ .Values.configMaps.mountPath }}
{{- end }}
{{- if .Values.extraVolumeMounts.enabled }}
{{ .Files.Get "config/volumeMounts.txt" | indent 8 }}
{{- end }}
      volumes:
{{- if .Values.configMaps.enabled }}
      - name: configurations
        configMap:
          name: {{ .Values.configMaps.name }}
{{- end }}
{{- if .Values.extraVolumes.enabled }}
{{ .Files.Get "config/volumes.txt" | indent 6 }}
{{- end }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: pv-{{ template "<CHARTNAME>.name" . }}
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
      {{- if .Values.persistence.storageClass }}
      {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.persistence.storageClass }}"
      {{- end }}
      {{- end }}
        resources:
          requests:
            storage: "{{ .Values.persistence.size }}"
{{- end }}
