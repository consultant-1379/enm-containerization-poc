Include /opt/ericsson/sso/web_agents/apache22_agent/placeholder.module.include/config/dsame.conf

LoadModule proxy_cluster_module ext/modules/mod_proxy_cluster.so
LoadModule slotmem_module ext/modules/mod_slotmem.so
LoadModule manager_module ext/modules/mod_manager.so

LoadModule ssl_module modules/mod_ssl.so

Listen 443

SSLPassPhraseDialog  builtin

SSLSessionCache         shmcb:/var/cache/mod_ssl/scache(512000)
SSLSessionCacheTimeout  300

SSLMutex default

SSLRandomSeed startup file:/dev/urandom  256
SSLRandomSeed connect builtin

SSLCryptoDevice builtin


<VirtualHost placeholder.httpd.hostname:443 placeholder.virtual.hostname:placeholder.virtual.port>

        ServerName placeholder.virtual.hostname

        SSLEngine on
        SSLProtocol all -SSLv2 -SSLv3
        SSLCipherSuite HIGH:MEDIUM:MD5:!NULL:!aNULL:!eNULL:!LOW:@STRENGTH

        SSLCertificateFile /etc/pki/tls/certs/ApacheCert.crt
        SSLCertificateKeyFile /etc/pki/tls/private/ApacheCert.key
        SSLProxyEngine on

        Options -Indexes

        <Location />
                Order allow,deny
                Allow from all
        </Location>

        RewriteEngine On

<Proxy balancer://agentclusterlogin>
        BalancerMember placeholder.login.proxyrule
BalancerMember placeholder.login.proxyrule status=+H
</Proxy>


 <Proxy balancer://oldagentclusterlogin>
                BalancerMember placeholder.oldlogin.proxyrule
                BalancerMember placeholder.oldlogin.proxyrule status=+H
    </Proxy>


        <Proxy balancer://agentclusterlogout>
                BalancerMember placeholder.logout.proxyrule
                BalancerMember placeholder.logout.proxyrule status=+H
        </Proxy>

  <Proxy balancer://oldagentclusterlogout>
        BalancerMember placeholder.oldlogout.proxyrule
  BalancerMember placeholder.oldlogout.proxyrule status=+H
  </Proxy>

        # Disable HTTP TRACE and TRACK methods
        RewriteCond %{REQUEST_METHOD} ^(TRACE|TRACK)
        RewriteRule .* - [F]

        #TORF-286140 and TORF-286656
        RewriteCond %{REQUEST_URI} ^\/err401\/login.html$
    RewriteRule .* - [R=401,L]

        # Fix for ?goto being something else than servername in case of HTTPS
        RewriteCond %{REQUEST_URI} ^\/login\/(index.html)?$
        RewriteCond %{HTTPS} on
        RewriteCond %{SERVER_NAME},%{QUERY_STRING} !^(.+),(.+)?goto=https(:\/\/|%3A%2F%2F)\1 [NC]
        RewriteRule .* /login/?goto=https://%{SERVER_NAME} [L,R]


        # Fix for ?goto being something else than servername in case of HTTP
                RewriteCond %{REQUEST_URI} ^\/login\/(index.html)?$
                RewriteCond %{HTTPS} !on
                RewriteCond %{SERVER_NAME},%{QUERY_STRING} !^(.+),(.+)?goto=http(:\/\/|%3A%2F%2F)\1 [NC]
                RewriteRule .* /login/?goto=http://%{SERVER_NAME} [L,R]

        # Fix for ?goto being something else than servername in case of HTTPS
    RewriteCond %{REQUEST_URI} ^\/logout?$
    RewriteCond %{HTTPS} on
    RewriteCond %{SERVER_NAME},%{QUERY_STRING} !^(.+),(.+)?goto=https(:\/\/|%3A%2F%2F)\1 [NC]
    RewriteRule .* /logout?goto=https://%{SERVER_NAME} [L,PT]

    # Fix for ?goto being something else than servername in case of HTTP
    RewriteCond %{REQUEST_URI} ^\/logout?$
    RewriteCond %{HTTPS} !on
    RewriteCond %{SERVER_NAME},%{QUERY_STRING} !^(.+),(.+)?goto=http(:\/\/|%3A%2F%2F)\1 [NC]
    RewriteRule .* /logout?goto=http://%{SERVER_NAME} [L,PT]


        <Location /index.html>
                Header set Cache-Control "no-store, no-cache, must-revalidate, post-check=0, pre-check=0"
                Header set Pragma "no-cache"
                Header set Expires "Thu, 19 Nov 1981 08:52:00 GMT"
        </Location>

        # Login gets POST request on /login that we proxy to new openAM endpoint
    RewriteCond %{REQUEST_METHOD}   ^POST
    RewriteCond placeholder.login.check.file -f
    RewriteRule ^/login$ placeholder.login.rewrite [QSA,L,P]
    ProxyPassReverse /login balancer://agentclusterlogin

    # Login gets POST request on /login that we proxy to old openAM endpoint
    RewriteCond %{REQUEST_METHOD}   ^POST
    RewriteCond placeholder.login.check.file !-f
    RewriteRule ^/login$ placeholder.oldlogin.rewrite [QSA,L,P]
    ProxyPassReverse /login balancer://oldagentclusterlogin


                # Logout gets GET request on /logout that we proxy to openAM
                RewriteCond %{REQUEST_METHOD}   ^GET$
                RewriteCond placeholder.logout.check.file -f
                RewriteRule ^/logout$ placeholder.logout.rewrite [QSA,L,P]
                ProxyPassReverse /logout balancer://agentclusterlogout


                # Logout gets GET request on /logout that we proxy to openAM
                RewriteCond %{REQUEST_METHOD}   ^GET$
    RewriteCond placeholder.logout.check.file !-f
    RewriteRule ^/logout$ placeholder.oldlogout.rewrite [QSA,L,P]
    ProxyPassReverse /logout balancer://oldagentclusterlogout


                ProxyPass /heimdallr/isAlive.jsp placeholder.heartbeat.jboss.url
                ProxyPassReverse /heimdallr/isAlive.jsp placeholder.heartbeat.jboss.url
                ProxyPass /heimdallr/identity/authenticate placeholder.heartbeat.ldap.url
                ProxyPassReverse /heimdallr/identity/authenticate placeholder.heartbeat.ldap.url

    # Redirect the SSO default landing page
                RewriteCond %{REQUEST_METHOD}   ^GET
                ProxyPassReverse /login/success placeholder.openam.landing.url
                RewriteCond %{REQUEST_METHOD}   ^GET
                ProxyPassReverse /login/success placeholder.openam.landing.url.secure

        ProxyPass /rest/ http://localhost:8080/rest/
        ProxyPassReverse /rest/ http://localhost:8080/rest/

        ProxyPass /oss/ http://secserv:8080/oss/
        ProxyPassReverse /oss/ http://secserv:8080/oss/

        Include conf.d/virtualhost_includes/*.conf

</VirtualHost>
