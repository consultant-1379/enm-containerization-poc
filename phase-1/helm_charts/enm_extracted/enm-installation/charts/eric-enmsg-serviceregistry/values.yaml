## eric-enmsg-serviceregistry image version

global:
  registry:
    url: 152254703525.dkr.ecr.eu-west-1.amazonaws.com
    pullSecret:
  replicas-eric-enmsg-serviceregistry: 3
  ingress:
    enmhost:
  persistentVolumeClaim:
    storageClass:

# Number of replicas(pods) to deploy
replicas-eric-enmsg-serviceregistry: 3

images:
  eric-enmsg-serviceregistry:
    name: eric-enmsg-serviceregistry
    tag: latest
    command: "[ 'consul', 'agent', '-advertise=$(POD_IP)', '-node=$(POD_NAME)', '-retry-join=consul-0.consul.$(NAMESPACE).svc.cluster.local', '-retry-join=consul-1.consul.$(NAMESPACE).svc.cluster.local', '-retry-join=consul-2.consul.$(NAMESPACE).svc.cluster.local', '-config-dir=/ericsson/consul/config']"
  waitInitContainer:
    enabled: false
    name: eric-enm-init-container
    tag: latest
    command: "[ '/bin/sh', '-c', 'bash /var/tmp/check_service.sh -s WAITSERVICE' ]"
  enmInitContainer:
    enabled: false
    name: eric-enm-init-container
    tag: latest
    command: "[ '/bin/sh', '-c', 'bash configure.sh;' ]"

imageCredentials:
  repoPath: enm 
  pullPolicy: Always
  registry:
    url:
    pullSecret:

## Allows the specification of additional environment variables
extraEnv:
 - name: POD_IP
   valueFrom:
     fieldRef:
       fieldPath: status.podIP
 - name: NAMESPACE
   valueFrom:
     fieldRef:
       fieldPath: metadata.namespace
 - name: POD_NAME
   valueFrom:
     fieldRef:
       fieldPath: metadata.name

## Configure the service
## ref: http://kubernetes.io/docs/user-guide/services/
service:
  name: consul
  annotations: {}
  labels: {}

ingress:
  enabled: false
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
  path: /
  port: 443
  enmHost:

# Service Ports to Expose, read from appconfig/servicePorts.txt
servicePorts:
  enabled: true

# Add container ports to open, read in from appconfig/ports.txt(disabled by default as should be included in docker file)
extraPorts:
  enabled: true

## Configure resource requests and limits
## ref: http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  requests:
    enabled: false
    memory: RMEM
    cpu: RCPU
  limits:
    enabled: false
    memory: LMEM
    cpu: LCPU

# ENV Wait for Application Dependencies.
waitInitContainerEnv:
  enabled: false
  env:
    - name: ADMIN_PASSWORD
      valueFrom:
        secretKeyRef:
          name: graphdb-neo4j-secrets
          key: neo4j-password

# ENM specific init container(ENM image)  
enmInitContainerEnv:
  enabled: false
  env:
    - name: NEO4J_BOLT_HOST
      value: "graphdb-neo4j"
    - name: NEO4J_BOLT_PORT
      value: "7687"
    - name: ADMIN_USER
      value: "neo4j"
    - name: ADMIN_PASSWORD
      value: "Neo4jadmin123"

privileged:
  enabled: false

# Add initContainer if required
extraInitContainers:
#  - name: do-something
#     image: busybox
#     command: ['do', 'something']

## Additional containers to be added to the pod(s).
sidecarContainers:
#  - name: my-sidecar
#    image: nginx:latest

# Add in volumes(nfs etc), read from appconfig/volumes.txt
extraVolumes:
  enabled: true

# Add in volumeMounts(nfs etc), read from appconfig/volumeMounts.txt
extraVolumeMounts:
  enabled: true
  
# Custom config map, read from appconfig/configMaps.yaml
configMaps:
  enabled: true
  name: config-eric-enmsg-serviceregistry
  mountPath: /ericsson/consul/config
  
## Persist data to a persistent volume
  ## database data Persistent Volume Storage Class
persistentVolumeClaim:
  enabled: true
  storageClass: "gp2"
  accessMode: ReadWriteOnce
  size: 1Gi
  mountPath: /ericsson/data
  annotations: {}

# LivenessProbe Health Check configuration.
livenessProbe:
  enabled: false
  httpPort: 12987
  initialDelaySeconds: 600
  timeoutSeconds: 15
  periodSeconds: 30
  failureThreshold: 1

readinessProbe:
  enabled: false
  httpPort: 12987
  initialDelaySeconds: 120
  periodSeconds: 30
  timeoutSeconds: 15
  failureThreshold: 1

# Extra Annotations to be added to pod
podAnnotations: {}

## Tolerations for pod assignment
### ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
tolerations: []

## Affinity for pod assignment
### ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: {}

# Constrain which nodes your pod is eligible to be scheduled on
### ref:  https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#node-affinity-beta-feature
nodeAffinity: {}

### ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/#pod-priority
priorityClassName: ""

## Node selector
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#nodeselector
nodeSelector: {}

#https://kubernetes.io/docs/reference/federation/extensions/v1beta1/definitions/#_v1beta1_deploymentstrategy
updateStrategy:
  type: RollingUpdate
  rollingUpdate:
    maxUnavailable: 0
    maxSurge: 1
