#!/bin/sh
#
# chkconfig: 345 79 29
# description: Responsible for start & stop of GossipRouter
# processname: gossiprouter
#
### BEGIN INIT INFO
# Provides: GossipRouter
# Required-Start: $remote_fs $network $syslog
# Required-Stop: $remote_fs $network $syslog
# Should-Stop: sshd
# Default-Start: 3 4 5
# Default-Stop: 0 6
# Short-Description: start and stop GossipRouter
# Description: TCP GossipRouter used by Jboss EJB Remoting and SDK Cache for clustering. 
# The init.d script is LSB and OCF compliant. 
### END INIT INFO

#
# Global Variables
#
LIB="lib_for_remoting"

export BIND_ADDR=`ip addr list eth0 | grep inet | grep -v inet6 | cut -d' ' -f6 | cut -d/ -f1`
export PORT="12002"
export GOSSIPROUTER_PID_FILE=/var/run/gossiproutercache.pid
export RETVAL=0
GOSSIP_ROUTER_USAGE="caches"
STOP_WAIT=10

#
# Shell commands
#
_ECHO=/bin/echo
_KILL=/bin/kill
_PS=/bin/ps
_RM=/bin/rm

#
# Start the GossipRouter.
#
start() {
    export CLASSPATH="/ericsson/3pp/jggossiprouters/lib_for_$GOSSIP_ROUTER_USAGE/*"

    exec java -Dlog4j.configuration=file:/ericsson/3pp/jggossiprouters/lib_for_$GOSSIP_ROUTER_USAGE/log4j.properties -cp "$CLASSPATH" org.jgroups.stack.GossipRouter -bind_addr $BIND_ADDR -port $PORT &
    GOSSIPROUTER_PID=$!
    if [ -d "/proc/${GOSSIPROUTER_PID}" ]; then
        $_ECHO "$GOSSIPROUTER_PID" > $GOSSIPROUTER_PID_FILE
        logger "GossipRouter has been started successfully with the following arguments: ${mdtJavaArgs[*]}."
    else
        logger "GossipRouter failed to start correctly!"
        RETVAL=1
    fi
}

#
# Stop the GossipRouter.
#
stop() {
    if [ ! -f $GOSSIPROUTER_PID_FILE ]; then
        logger "GossipRouter is not currently running!"
        RETVAL=1
    else
        stopGossipRouter
        if [ $? -eq -0 ]; then
            logger "GossipRouter has been stopped successfully."
        fi
    fi
}

#
# Stops Gossiprouter process and removes the PID file.
#
stopGossipRouter() {
    if [[ -f "$GOSSIPROUTER_PID_FILE" ]]; then
        GOSSIPROUTER_PID=$(cat $GOSSIPROUTER_PID_FILE)
        let count=0
            # Try issuing SIGTERM
            $_KILL -15 "$GOSSIPROUTER_PID"
            until [ `$_PS --pid $GOSSIPROUTER_PID 2> /dev/null | grep -c $GOSSIPROUTER_PID 2> /dev/null` -eq '0' ] || [ $count -gt $STOP_WAIT ]
            do
              sleep 1
              let count=$count+1;
            done

            if [ $count -gt $STOP_WAIT ]; then
               logger "Force killing process"
               $_KILL -9 "$GOSSIPROUTER_PID"
            fi

        $_RM -f "$GOSSIPROUTER_PID_FILE"
        if [ $? -eq -0 ]; then
            logger "Removed $GOSSIPROUTER_PID_FILE"
        fi
     fi
}

#
# Report the status of the GossipRouter.
#
status() {
    if [ ! -f $GOSSIPROUTER_PID_FILE ]; then
        logger "GossipRouter is not currently running!"
        RETVAL=7
    else
        GOSSIPROUTER_PID=$(cat $GOSSIPROUTER_PID_FILE)
        if $_PS -p "$GOSSIPROUTER_PID" > /dev/null; then
            logger "GossipRouter is running."
        else
            logger "GossipRouter is not currently running!"
            removePidFile
            RETVAL=7
        fi
    fi
}

case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    restart)
        $0 stop
        $0 start
        ;;
    status)
        status
        ;;
    monitor)
        monitor
        ;;
    *)
        ## If no parameters are given, print which are available.
        $_ECHO "Usage: $0 {start|stop|status|restart|monitor}"
        RETVAL=2
        ;;
esac

